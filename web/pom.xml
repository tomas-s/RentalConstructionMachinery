<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>cz.mufi.PA165</groupId>
    <artifactId>RentalConstructionMachinery</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  
  <artifactId>web</artifactId>
  <packaging>war</packaging>
  
      <dependencies>



        <!-- servlet, JSP, JSTL -->
        <!-- must be this instead of javaee-web for the springmvc-tests to succeed -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-api</artifactId>
            <version>${tomcat.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-spec</artifactId>
            <version>${taglibs-standard.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.taglibs</groupId>
            <artifactId>taglibs-standard-impl</artifactId>
            <version>${taglibs-standard.version}</version>
        </dependency>

        <!-- Spring MVC -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <!-- validator for bean properties -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!-- must provide logging implementation, this is a runnable project -->
        <!-- see viz http://docs.spring.io/platform/docs/1.1.4.RELEASE/reference/htmlsingle/#getting-started-logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <!-- libraries needed for unit tests -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
  
      <build>
        <!-- what to do when only "mvn" is run -->
<!--         <defaultGoal>tomcat7:run</defaultGoal> -->
<!--         <plugins> -->
<!--             Servlet 3.0 allows no web.xml deployment descriptor -->
<!--             <plugin> -->
<!--                 <groupId>org.apache.maven.plugins</groupId> -->
<!--                 <artifactId>maven-war-plugin</artifactId> -->
<!--                 <version>2.5</version> -->
<!--                 <configuration> -->
<!--                     <failOnMissingWebXml>false</failOnMissingWebXml> -->
<!--                 </configuration> -->
<!--             </plugin> -->
            
            
            <plugins>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <!-- No version needed here, it is already defined in the multi-module root pom -->
        <configuration>
          <!-- This is where our specific configuration goes -->
          <path>/rental</path> 
        </configuration>
      </plugin>
    </plugins>
            
            
<!--              embedded tomcat -->
<!--             <plugin> -->
<!--                 <groupId>org.apache.tomcat.maven</groupId> -->
<!--                 <artifactId>tomcat7-maven-plugin</artifactId> -->
<!--                 <version>2.2</version> -->
<!--                 <configuration> -->
<!--                     <path>/eshop</path> -->
<!--                 </configuration> -->
<!--             </plugin> -->
<!--         </plugins> -->
    </build>
</project>